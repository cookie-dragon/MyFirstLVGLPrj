diff --git forkSrcPrefix/src/misc/lv_anim.c forkDstPrefix/src/misc/lv_anim.c
index 8fc986764518d9b9fa03d6b59665c714991e1911..613bd3e25ce528f2c70203ad558b797e697bd677 100644
--- forkSrcPrefix/src/misc/lv_anim.c
+++ forkDstPrefix/src/misc/lv_anim.c
@@ -3,6 +3,10 @@
  *
  */
 
+/**
+ * Modified by NXP in 2024
+ */
+
 /*********************
  *      INCLUDES
  *********************/
@@ -81,6 +85,7 @@ void lv_anim_init(lv_anim_t * a)
     a->repeat_cnt = 1;
     a->path_cb = lv_anim_path_linear;
     a->early_apply = 1;
+    a->anim_pause = false;
 }
 
 lv_anim_t * lv_anim_start(const lv_anim_t * a)
@@ -128,6 +133,45 @@ lv_anim_t * lv_anim_start(const lv_anim_t * a)
     return new_anim;
 }
 
+bool lv_anim_pause(void * var, lv_anim_exec_xcb_t exec_cb)
+{
+    lv_anim_t * a;
+    lv_anim_t * a_next;
+    bool pause = false;
+    a        = lv_ll_get_head(anim_ll_p);
+    while(a != NULL) {
+        a_next = lv_ll_get_next(anim_ll_p, a);
+
+        if((a->var == var || var == NULL) && (a->exec_cb == exec_cb || exec_cb == NULL)) {
+            a->anim_pause = true;
+            anim_mark_list_change();
+            pause = true;
+        }
+
+        a = a_next;
+    }
+    return pause;
+}
+
+bool lv_anim_resume(void * var, lv_anim_exec_xcb_t exec_cb)
+{
+    lv_anim_t * a;
+    lv_anim_t * a_next;
+    bool resume = false;
+    a        = lv_ll_get_head(anim_ll_p);
+    while(a != NULL) {
+        a_next = lv_ll_get_next(anim_ll_p, a);
+
+        if((a->var == var || var == NULL) && (a->exec_cb == exec_cb || exec_cb == NULL)) {
+            a->anim_pause = false;
+            anim_mark_list_change();
+            resume = true;
+        }
+        a = a_next;
+    }
+    return resume;
+}
+
 uint32_t lv_anim_get_playtime(const lv_anim_t * a)
 {
     if(a->repeat_cnt == LV_ANIM_REPEAT_INFINITE) {
@@ -501,8 +545,6 @@ static void anim_timer(lv_timer_t * param)
 
     while(a != NULL) {
         uint32_t elaps = lv_tick_elaps(a->last_timer_run);
-        a->act_time += elaps;
-
         a->last_timer_run = lv_tick_get();
 
         /*It can be set by `lv_anim_delete()` typically in `end_cb`. If set then an animation delete
@@ -511,7 +553,7 @@ static void anim_timer(lv_timer_t * param)
          */
         state.anim_list_changed = false;
 
-        if(a->run_round != state.anim_run_round) {
+        if(a->run_round != state.anim_run_round && !a->anim_pause) {
             a->run_round = state.anim_run_round; /*The list readying might be reset so need to know which anim has run already*/
 
             /*The animation will run now for the first time. Call `start_cb`*/
@@ -531,7 +573,7 @@ static void anim_timer(lv_timer_t * param)
                 /*Do not let two animations for the same 'var' with the same 'exec_cb'*/
                 remove_concurrent_anims(a);
             }
-
+            a->act_time += elaps;
             if(a->act_time >= 0) {
                 if(a->act_time > a->duration) a->act_time = a->duration;
 
